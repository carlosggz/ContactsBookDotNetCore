// <auto-generated />
using ContactsBook.Infrastructure.Repositories.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ContactsBook.Infrastructure.Repositories.EF.Migrations
{
    [DbContext(typeof(ContactsBookContext))]
    [Migration("20200630095907_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ContactsBook.Infrastructure.Repositories.EF.Models.ContactEmailModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ContactId")
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.HasIndex("ContactId");

                    b.ToTable("ContactEmails");
                });

            modelBuilder.Entity("ContactsBook.Infrastructure.Repositories.EF.Models.ContactModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(36)")
                        .HasMaxLength(36);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("ContactsBook.Infrastructure.Repositories.EF.Models.ContactPhoneModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ContactId")
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int>("PhoneType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ContactId");

                    b.ToTable("ContactPhones");
                });

            modelBuilder.Entity("ContactsBook.Infrastructure.Repositories.EF.Models.ContactEmailModel", b =>
                {
                    b.HasOne("ContactsBook.Infrastructure.Repositories.EF.Models.ContactModel", "Contact")
                        .WithMany("Emails")
                        .HasForeignKey("ContactId")
                        .HasConstraintName("FK_Email_Contact");
                });

            modelBuilder.Entity("ContactsBook.Infrastructure.Repositories.EF.Models.ContactPhoneModel", b =>
                {
                    b.HasOne("ContactsBook.Infrastructure.Repositories.EF.Models.ContactModel", "Contact")
                        .WithMany("Phones")
                        .HasForeignKey("ContactId")
                        .HasConstraintName("FK_Phone_Contact");
                });
#pragma warning restore 612, 618
        }
    }
}
